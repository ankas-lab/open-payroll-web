{
  "source": {
    "hash": "0xb4d6523ea74d7117fbaa0d67ad5e3f28d315e4c6801cef03fba016f447c41342",
    "language": "ink! 4.2.1",
    "compiler": "rustc 1.69.0",
    "build_info": {
      "build_mode": "Release",
      "cargo_contract_version": "3.0.1",
      "rust_toolchain": "stable-aarch64-apple-darwin",
      "wasm_opt_settings": {
        "keep_debug_symbols": false,
        "optimization_passes": "Z"
      }
    }
  },
  "contract": {
    "name": "open_payroll",
    "version": "0.1.0",
    "authors": [
      "[Polkadrys]"
    ]
  },
  "spec": {
    "constructors": [
      {
        "args": [
          {
            "label": "periodicity",
            "type": {
              "displayName": [
                "u32"
              ],
              "type": 4
            }
          },
          {
            "label": "base_payment",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 5
            }
          },
          {
            "label": "initial_base_multipliers",
            "type": {
              "displayName": [
                "Vec"
              ],
              "type": 11
            }
          },
          {
            "label": "initial_beneficiaries",
            "type": {
              "displayName": [
                "Vec"
              ],
              "type": 12
            }
          }
        ],
        "default": false,
        "docs": [
          "Constructor that initializes the owner, the base payment, the periodicity, the initial block, the base multipliers,",
          "and the initial beneficiaries"
        ],
        "label": "new",
        "payable": true,
        "returnType": {
          "displayName": [
            "ink_primitives",
            "ConstructorResult"
          ],
          "type": 14
        },
        "selector": "0x9bae9d5e"
      }
    ],
    "docs": [],
    "environment": {
      "accountId": {
        "displayName": [
          "AccountId"
        ],
        "type": 0
      },
      "balance": {
        "displayName": [
          "Balance"
        ],
        "type": 5
      },
      "blockNumber": {
        "displayName": [
          "BlockNumber"
        ],
        "type": 4
      },
      "chainExtension": {
        "displayName": [
          "ChainExtension"
        ],
        "type": 38
      },
      "hash": {
        "displayName": [
          "Hash"
        ],
        "type": 36
      },
      "maxEventTopics": 4,
      "timestamp": {
        "displayName": [
          "Timestamp"
        ],
        "type": 37
      }
    },
    "events": [
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "account_id",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "amount",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 5
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "total_payment",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 5
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "claiming_period_block",
            "type": {
              "displayName": [
                "BlockNumber"
              ],
              "type": 4
            }
          }
        ],
        "docs": [
          "Emitted when a beneficiary claims their payment"
        ],
        "label": "Claimed"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "multiplier_id",
            "type": {
              "displayName": [
                "MultiplierId"
              ],
              "type": 4
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "valid_until_block",
            "type": {
              "displayName": [
                "BlockNumber"
              ],
              "type": 4
            }
          }
        ],
        "docs": [
          "Emitted when a multiplier is deactivated"
        ],
        "label": "MultiplierDeactivated"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "multiplier_id",
            "type": {
              "displayName": [
                "MultiplierId"
              ],
              "type": 4
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "valid_until_block",
            "type": {
              "displayName": [
                "BlockNumber"
              ],
              "type": 4
            }
          }
        ],
        "docs": [
          "Emitted when a multiplier is deleted"
        ],
        "label": "MultiplierDeleted"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "current_owner",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "docs": [],
            "indexed": true,
            "label": "proposed_owner",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "docs": [
          "Emiited when the ownership of the contract is transferred"
        ],
        "label": "OwnershipProposed"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "previous_owner",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "docs": [],
            "indexed": true,
            "label": "new_owner",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "docs": [
          "Emitted when the ownership of the contract is accepted"
        ],
        "label": "OwnershipAccepted"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "account_id",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "multipliers_vec",
            "type": {
              "displayName": [
                "Vec"
              ],
              "type": 6
            }
          }
        ],
        "docs": [
          "Emitted when a beneficiary is added"
        ],
        "label": "BeneficiaryAdded"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "account_id",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "multipliers_vec",
            "type": {
              "displayName": [
                "Vec"
              ],
              "type": 6
            }
          }
        ],
        "docs": [
          "Emitted when a beneficiary is updated"
        ],
        "label": "BeneficiaryUpdated"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": true,
            "label": "account_id",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "docs": [
          "Emitted when a beneficiary is removed"
        ],
        "label": "BeneficiaryRemoved"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": false,
            "label": "multiplier_id",
            "type": {
              "displayName": [
                "MultiplierId"
              ],
              "type": 4
            }
          },
          {
            "docs": [],
            "indexed": false,
            "label": "name",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 9
            }
          }
        ],
        "docs": [
          "Emitted when a multiplier is added"
        ],
        "label": "BaseMultiplierAdded"
      },
      {
        "args": [
          {
            "docs": [],
            "indexed": false,
            "label": "periodicity",
            "type": {
              "displayName": [
                "u32"
              ],
              "type": 4
            }
          }
        ],
        "docs": [
          "Emitted when the preiodicity is updated"
        ],
        "label": "PeriodicityUpdated"
      },
      {
        "args": [],
        "docs": [
          "Emitted when the contract is paused"
        ],
        "label": "Paused"
      },
      {
        "args": [],
        "docs": [
          "Emitted when the contract is resumed"
        ],
        "label": "Resumed"
      }
    ],
    "lang_error": {
      "displayName": [
        "ink",
        "LangError"
      ],
      "type": 18
    },
    "messages": [
      {
        "args": [
          {
            "label": "account_id",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "label": "amount",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 5
            }
          }
        ],
        "default": false,
        "docs": [
          " Claim payment for a single account id",
          " If the amount is 0 no money is transferred. However, the \"unclaimed_payments\" field is set to the total",
          " value that the beneficiary has yet to claim."
        ],
        "label": "claim_payment",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 14
        },
        "selector": "0x05ac0c19"
      },
      {
        "args": [
          {
            "label": "multiplier_id",
            "type": {
              "displayName": [
                "MultiplierId"
              ],
              "type": 4
            }
          }
        ],
        "default": false,
        "docs": [
          " Deactivate a multiplier",
          " It can be deleted one period after deactivation if every beneficiary has claimed the payment"
        ],
        "label": "deactivate_multiplier",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 14
        },
        "selector": "0xc4f6486c"
      },
      {
        "args": [
          {
            "label": "multiplier_id",
            "type": {
              "displayName": [
                "MultiplierId"
              ],
              "type": 4
            }
          }
        ],
        "default": false,
        "docs": [
          " Delete a multiplier when conditions are met"
        ],
        "label": "delete_unused_multiplier",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 14
        },
        "selector": "0xaafc7985"
      },
      {
        "args": [
          {
            "label": "new_owner",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [
          " Change ownership of the contract",
          " This is proposing a new owner that has to accept the ownership"
        ],
        "label": "propose_transfer_ownership",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 14
        },
        "selector": "0x1fe6d1d3"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Accept ownership of the contract",
          " Once the ownership is proposed by transfer_ownsership function it needs to be accepted",
          " by the new owner. This prevents accidental ownership transfers."
        ],
        "label": "accept_ownership",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 14
        },
        "selector": "0xb55be9f0"
      },
      {
        "args": [
          {
            "label": "account_id",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "label": "multipliers",
            "type": {
              "displayName": [
                "Vec"
              ],
              "type": 6
            }
          }
        ],
        "default": false,
        "docs": [
          " Add a new beneficiary"
        ],
        "label": "add_beneficiary",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 14
        },
        "selector": "0xde3b11f5"
      },
      {
        "args": [
          {
            "label": "account_id",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          },
          {
            "label": "multipliers",
            "type": {
              "displayName": [
                "Vec"
              ],
              "type": 6
            }
          }
        ],
        "default": false,
        "docs": [
          " Update an existing beneficiary"
        ],
        "label": "update_beneficiary",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 14
        },
        "selector": "0x7e28d5c8"
      },
      {
        "args": [
          {
            "label": "account_id",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [
          " Remove a beneficiary"
        ],
        "label": "remove_beneficiary",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 14
        },
        "selector": "0x393fb7a5"
      },
      {
        "args": [
          {
            "label": "base_payment",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 5
            }
          }
        ],
        "default": false,
        "docs": [
          " Update the base_payment",
          " It makes sense once all the beneficiaries have claimed their payments"
        ],
        "label": "update_base_payment",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 14
        },
        "selector": "0xb8e6f2b9"
      },
      {
        "args": [
          {
            "label": "name",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 9
            }
          }
        ],
        "default": false,
        "docs": [
          " Add a new base multiplier",
          " It's not checking for duplicates because it's just a string"
        ],
        "label": "add_base_multiplier",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 14
        },
        "selector": "0xfcaca6e7"
      },
      {
        "args": [
          {
            "label": "periodicity",
            "type": {
              "displayName": [
                "u32"
              ],
              "type": 4
            }
          }
        ],
        "default": false,
        "docs": [
          " Update the periodicity of the payments",
          " All payments must be claimed before updating the periodicity"
        ],
        "label": "update_periodicity",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 14
        },
        "selector": "0xa552c910"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Pause the contract",
          " Pausing will only avoid to call the claim function"
        ],
        "label": "pause",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 14
        },
        "selector": "0x81e0c604"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Resume the contract",
          " Resuming will allow to call the claim function"
        ],
        "label": "resume",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 14
        },
        "selector": "0xc3a8f39e"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Ensure if all payments up to date or storage unclaiumed_payments is up-to-date",
          " TODO: this function should be renamed and separated in two different functions",
          " The view function should just return a bool, and the ensure function should return an error"
        ],
        "label": "ensure_all_payments_uptodate",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 14
        },
        "selector": "0xec4f0f62"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Reads the paused state from the contract"
        ],
        "label": "is_paused",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 19
        },
        "selector": "0xfa7d505b"
      },
      {
        "args": [
          {
            "label": "account_id",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [
          " Get amount in storage without transferring the funds",
          " Read Only function"
        ],
        "label": "get_amount_to_claim",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 21
        },
        "selector": "0x1ebbad2a"
      },
      {
        "args": [
          {
            "label": "account_id",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 0
            }
          }
        ],
        "default": false,
        "docs": [
          " Get beneficiary only read",
          " Read Only function"
        ],
        "label": "get_beneficiary",
        "mutates": true,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 23
        },
        "selector": "0x9510a8c5"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Get current block period",
          " Read Only function",
          " The calculation current_block - ((current_block - self.initial_block) % self.periodicity) might be a bit tricky to understand at first glance.",
          " Let's use an example to understand it. Assume self.initial_block to be 10, self.periodicity to be 20, and the current_block to be 65.",
          " current_block - self.initial_block = 65 - 10 = 55 55 % self.periodicity = 55 % 20 = 15.",
          " This gives us the number of blocks past the last \"period start\" in relation to initial_block and periodicity.  current_block - 15 = 65 - 15 = 50.",
          " This is the block number where the current period started."
        ],
        "label": "get_current_period_initial_block",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 26
        },
        "selector": "0x55efdba9"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Get next block period"
        ],
        "label": "get_next_block_period",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 26
        },
        "selector": "0x8d4bc80b"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Get all the debts up-to-date",
          " Read Only function"
        ],
        "label": "get_total_debts",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 27
        },
        "selector": "0x9b16bc1f"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Get all the debts for the next period",
          " Read Only function"
        ],
        "label": "get_total_debt_for_next_period",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 27
        },
        "selector": "0x73b8e09d"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Get all the debts including unclaimed for the next period",
          " Read Only function"
        ],
        "label": "get_total_debt_with_unclaimed_for_next_period",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 27
        },
        "selector": "0xe39b3b27"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Get all the beneficiaries",
          " Read Only function"
        ],
        "label": "get_list_beneficiaries",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 28
        },
        "selector": "0x263b0523"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Get contract balance",
          " Read Only function"
        ],
        "label": "get_contract_balance",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 27
        },
        "selector": "0xbe15a422"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Get total balance after paying debts",
          " Read Only function"
        ],
        "label": "get_balance_with_debts",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 27
        },
        "selector": "0x9306d52f"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Get list of unclaimed beneficiaries",
          " Read Only function"
        ],
        "label": "get_unclaimed_beneficiaries",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 28
        },
        "selector": "0x355e9df0"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Get count of unclaimed beneficiaries",
          " Read Only function"
        ],
        "label": "get_count_of_unclaim_beneficiaries",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 29
        },
        "selector": "0x0022c1c7"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Get the base amount to claim for each beneficiary"
        ],
        "label": "get_base_payment",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 27
        },
        "selector": "0x2a07e2d7"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Get the periodicity of the payments"
        ],
        "label": "get_periodicity",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 26
        },
        "selector": "0x4f24dca2"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Get the initial block of the contract"
        ],
        "label": "get_initial_block",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 26
        },
        "selector": "0xa8783cff"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Get the base multiplier"
        ],
        "label": "get_multipliers_list",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 30
        },
        "selector": "0x3adddb72"
      },
      {
        "args": [
          {
            "label": "multiplier_id",
            "type": {
              "displayName": [
                "MultiplierId"
              ],
              "type": 4
            }
          }
        ],
        "default": false,
        "docs": [
          " Get a base multiplier based on its id"
        ],
        "label": "get_base_multiplier",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 31
        },
        "selector": "0xf7765f14"
      },
      {
        "args": [],
        "default": false,
        "docs": [
          " Get the owner of the contract"
        ],
        "label": "get_owner",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 35
        },
        "selector": "0x07fcd0b1"
      }
    ]
  },
  "storage": {
    "root": {
      "layout": {
        "struct": {
          "fields": [
            {
              "layout": {
                "enum": {
                  "dispatchKey": "0x00000000",
                  "name": "Option",
                  "variants": {
                    "0": {
                      "fields": [],
                      "name": "None"
                    },
                    "1": {
                      "fields": [
                        {
                          "layout": {
                            "leaf": {
                              "key": "0x00000000",
                              "ty": 0
                            }
                          },
                          "name": "0"
                        }
                      ],
                      "name": "Some"
                    }
                  }
                }
              },
              "name": "proposed_owner"
            },
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 0
                }
              },
              "name": "owner"
            },
            {
              "layout": {
                "root": {
                  "layout": {
                    "struct": {
                      "fields": [
                        {
                          "layout": {
                            "leaf": {
                              "key": "0x6dd34625",
                              "ty": 0
                            }
                          },
                          "name": "account_id"
                        },
                        {
                          "layout": {
                            "leaf": {
                              "key": "0x6dd34625",
                              "ty": 3
                            }
                          },
                          "name": "multipliers"
                        },
                        {
                          "layout": {
                            "leaf": {
                              "key": "0x6dd34625",
                              "ty": 5
                            }
                          },
                          "name": "unclaimed_payments"
                        },
                        {
                          "layout": {
                            "leaf": {
                              "key": "0x6dd34625",
                              "ty": 4
                            }
                          },
                          "name": "last_updated_period_block"
                        }
                      ],
                      "name": "Beneficiary"
                    }
                  },
                  "root_key": "0x6dd34625"
                }
              },
              "name": "beneficiaries"
            },
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 8
                }
              },
              "name": "beneficiaries_accounts"
            },
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 4
                }
              },
              "name": "periodicity"
            },
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 5
                }
              },
              "name": "base_payment"
            },
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 4
                }
              },
              "name": "initial_block"
            },
            {
              "layout": {
                "enum": {
                  "dispatchKey": "0x00000000",
                  "name": "Option",
                  "variants": {
                    "0": {
                      "fields": [],
                      "name": "None"
                    },
                    "1": {
                      "fields": [
                        {
                          "layout": {
                            "leaf": {
                              "key": "0x00000000",
                              "ty": 4
                            }
                          },
                          "name": "0"
                        }
                      ],
                      "name": "Some"
                    }
                  }
                }
              },
              "name": "paused_block_at"
            },
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 4
                }
              },
              "name": "next_multiplier_id"
            },
            {
              "layout": {
                "root": {
                  "layout": {
                    "struct": {
                      "fields": [
                        {
                          "layout": {
                            "leaf": {
                              "key": "0xd688fcbf",
                              "ty": 9
                            }
                          },
                          "name": "name"
                        },
                        {
                          "layout": {
                            "enum": {
                              "dispatchKey": "0xd688fcbf",
                              "name": "Option",
                              "variants": {
                                "0": {
                                  "fields": [],
                                  "name": "None"
                                },
                                "1": {
                                  "fields": [
                                    {
                                      "layout": {
                                        "leaf": {
                                          "key": "0xd688fcbf",
                                          "ty": 4
                                        }
                                      },
                                      "name": "0"
                                    }
                                  ],
                                  "name": "Some"
                                }
                              }
                            }
                          },
                          "name": "valid_until_block"
                        }
                      ],
                      "name": "BaseMultiplier"
                    }
                  },
                  "root_key": "0xd688fcbf"
                }
              },
              "name": "base_multipliers"
            },
            {
              "layout": {
                "leaf": {
                  "key": "0x00000000",
                  "ty": 10
                }
              },
              "name": "multipliers_list"
            },
            {
              "layout": {
                "struct": {
                  "fields": [
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 4
                        }
                      },
                      "name": "period"
                    },
                    {
                      "layout": {
                        "leaf": {
                          "key": "0x00000000",
                          "ty": 4
                        }
                      },
                      "name": "total_claims"
                    }
                  ],
                  "name": "ClaimsInPeriod"
                }
              },
              "name": "claims_in_period"
            }
          ],
          "name": "OpenPayroll"
        }
      },
      "root_key": "0x00000000"
    }
  },
  "types": [
    {
      "id": 0,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 1,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "AccountId"
        ]
      }
    },
    {
      "id": 1,
      "type": {
        "def": {
          "array": {
            "len": 32,
            "type": 2
          }
        }
      }
    },
    {
      "id": 2,
      "type": {
        "def": {
          "primitive": "u8"
        }
      }
    },
    {
      "id": 3,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 6
              }
            ]
          }
        },
        "params": [
          {
            "name": "K",
            "type": 4
          },
          {
            "name": "V",
            "type": 5
          }
        ],
        "path": [
          "BTreeMap"
        ]
      }
    },
    {
      "id": 4,
      "type": {
        "def": {
          "primitive": "u32"
        }
      }
    },
    {
      "id": 5,
      "type": {
        "def": {
          "primitive": "u128"
        }
      }
    },
    {
      "id": 6,
      "type": {
        "def": {
          "sequence": {
            "type": 7
          }
        }
      }
    },
    {
      "id": 7,
      "type": {
        "def": {
          "tuple": [
            4,
            5
          ]
        }
      }
    },
    {
      "id": 8,
      "type": {
        "def": {
          "sequence": {
            "type": 0
          }
        }
      }
    },
    {
      "id": 9,
      "type": {
        "def": {
          "primitive": "str"
        }
      }
    },
    {
      "id": 10,
      "type": {
        "def": {
          "sequence": {
            "type": 4
          }
        }
      }
    },
    {
      "id": 11,
      "type": {
        "def": {
          "sequence": {
            "type": 9
          }
        }
      }
    },
    {
      "id": 12,
      "type": {
        "def": {
          "sequence": {
            "type": 13
          }
        }
      }
    },
    {
      "id": 13,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "account_id",
                "type": 0,
                "typeName": "AccountId"
              },
              {
                "name": "multipliers",
                "type": 6,
                "typeName": "Vec<(MultiplierId, Multiplier)>"
              }
            ]
          }
        },
        "path": [
          "open_payroll",
          "open_payroll",
          "InitialBeneficiary"
        ]
      }
    },
    {
      "id": 14,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 15
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 18
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 15
          },
          {
            "name": "E",
            "type": 18
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 15,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 16
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 17
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 16
          },
          {
            "name": "E",
            "type": 17
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 16,
      "type": {
        "def": {
          "tuple": []
        }
      }
    },
    {
      "id": 17,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "NotOwner"
              },
              {
                "index": 1,
                "name": "ContractIsPaused"
              },
              {
                "index": 2,
                "name": "InvalidParams"
              },
              {
                "index": 3,
                "name": "AccountNotFound"
              },
              {
                "index": 4,
                "name": "NotEnoughBalanceInTreasury"
              },
              {
                "index": 5,
                "name": "TransferFailed"
              },
              {
                "index": 6,
                "name": "NoUnclaimedPayments"
              },
              {
                "index": 7,
                "name": "PaymentsNotUpToDate"
              },
              {
                "index": 8,
                "name": "NotAllClaimedInPeriod"
              },
              {
                "index": 9,
                "name": "ClaimedAmountIsBiggerThanAvailable"
              },
              {
                "index": 10,
                "name": "InvalidMultipliersLength"
              },
              {
                "index": 11,
                "name": "MultiplierNotFound"
              },
              {
                "index": 12,
                "name": "MultiplierAlreadyDeactivated"
              },
              {
                "index": 13,
                "name": "MultiplierNotDeactivated"
              },
              {
                "index": 14,
                "name": "DuplicatedMultipliers"
              },
              {
                "index": 15,
                "name": "DuplicatedBeneficiaries"
              },
              {
                "index": 16,
                "name": "MultiplierNotExpired"
              },
              {
                "index": 17,
                "name": "MaxBeneficiariesExceeded"
              },
              {
                "index": 18,
                "name": "MaxMultipliersExceeded"
              },
              {
                "index": 19,
                "name": "AccountAlreadyExists"
              },
              {
                "index": 20,
                "name": "MultiplierIdOverflow"
              }
            ]
          }
        },
        "path": [
          "open_payroll",
          "open_payroll",
          "Error"
        ]
      }
    },
    {
      "id": 18,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 1,
                "name": "CouldNotReadInput"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "LangError"
        ]
      }
    },
    {
      "id": 19,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 20
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 18
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 20
          },
          {
            "name": "E",
            "type": 18
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 20,
      "type": {
        "def": {
          "primitive": "bool"
        }
      }
    },
    {
      "id": 21,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 22
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 18
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 22
          },
          {
            "name": "E",
            "type": 18
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 22,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 5
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 5
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 23,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 24
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 18
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 24
          },
          {
            "name": "E",
            "type": 18
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 24,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 25
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 25
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 25,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "account_id",
                "type": 0,
                "typeName": "AccountId"
              },
              {
                "name": "multipliers",
                "type": 3,
                "typeName": "BTreeMap<MultiplierId, Multiplier>"
              },
              {
                "name": "unclaimed_payments",
                "type": 5,
                "typeName": "Balance"
              },
              {
                "name": "last_updated_period_block",
                "type": 4,
                "typeName": "BlockNumber"
              }
            ]
          }
        },
        "path": [
          "open_payroll",
          "open_payroll",
          "Beneficiary"
        ]
      }
    },
    {
      "id": 26,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 4
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 18
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 4
          },
          {
            "name": "E",
            "type": 18
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 27,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 5
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 18
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 5
          },
          {
            "name": "E",
            "type": 18
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 28,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 8
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 18
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 8
          },
          {
            "name": "E",
            "type": 18
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 29,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 2
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 18
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 2
          },
          {
            "name": "E",
            "type": 18
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 30,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 10
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 18
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 10
          },
          {
            "name": "E",
            "type": 18
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 31,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 32
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 18
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 32
          },
          {
            "name": "E",
            "type": 18
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 32,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 33
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 33
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 33,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "name": "name",
                "type": 9,
                "typeName": "String"
              },
              {
                "name": "valid_until_block",
                "type": 34,
                "typeName": "Option<BlockNumber>"
              }
            ]
          }
        },
        "path": [
          "open_payroll",
          "open_payroll",
          "BaseMultiplier"
        ]
      }
    },
    {
      "id": 34,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 0,
                "name": "None"
              },
              {
                "fields": [
                  {
                    "type": 4
                  }
                ],
                "index": 1,
                "name": "Some"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 4
          }
        ],
        "path": [
          "Option"
        ]
      }
    },
    {
      "id": 35,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 0
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 18
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 0
          },
          {
            "name": "E",
            "type": 18
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 36,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 1,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "Hash"
        ]
      }
    },
    {
      "id": 37,
      "type": {
        "def": {
          "primitive": "u64"
        }
      }
    },
    {
      "id": 38,
      "type": {
        "def": {
          "variant": {}
        },
        "path": [
          "ink_env",
          "types",
          "NoChainExtension"
        ]
      }
    }
  ],
  "version": "4"
}